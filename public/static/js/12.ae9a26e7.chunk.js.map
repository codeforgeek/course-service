{"version":3,"sources":["app/views/pages/AddBit/AddBitComponent.jsx","app/views/pages/AddBit/index.js"],"names":["AddCourseComponent","props","bitData","name","slug","content","tags","author","tinyMceApiKey","saveBitDetails","handleChange","handleEditorChange","handleTagsChange","id","className","Form","onSubmit","Card","Body","icon","faBook","Group","controlId","Control","type","value","placeholder","onChange","e","required","faBookOpen","apiKey","key","initialValue","init","selector","images_upload_handler","blobInfo","success","failure","uploadImageFromBlobInfo","height","menubar","plugins","toolbar","entity_encoding","onEditorChange","overview","faSitemap","faChalkboardTeacher","Button","variant","faSave","AddBit","dispatch","useDispatch","useSelector","state","app","useState","setBitData","AddBitComponent","preventDefault","bitOperations","saveNewBitDetails","field","stopPropagation","newValue","target"],"mappings":"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","file":"static/js/12.ae9a26e7.chunk.js","sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faBookOpen,\n  faSitemap,\n  faChalkboardTeacher,\n  faSave,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { uploadImageFromBlobInfo } from \"app/utils\";\nimport TagsInput from \"react-tagsinput\";\n\nfunction AddCourseComponent(props) {\n  const {\n    bitData: { name, slug, content, tags, author },\n    tinyMceApiKey,\n    saveBitDetails,\n    handleChange,\n    handleEditorChange,\n    handleTagsChange,\n  } = props;\n\n  return (\n    <div id=\"cfg_add_bit_page\" className=\"page p-0\">\n      <Form onSubmit={saveBitDetails}>\n        <div className=\"course-info p-3\">\n          <Card className=\"border-0\">\n            <Card.Body>\n              <div className=\"text-muted\">\n                <div className=\"border-bottom mb-0 pb-3\">\n                  <strong className=\"d-block text-gray-dark\">\n                    <FontAwesomeIcon icon={faBook} className=\"mr-2\" />\n                    Title\n                  </strong>\n                  <Form.Group controlId=\"name\" className=\"mb-0 mt-2\">\n                    <Form.Control\n                      type=\"text\"\n                      value={name || \"\"}\n                      placeholder=\"Enter title\"\n                      onChange={(e) => handleChange(\"name\", e)}\n                      required\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"text-muted pt-3\">\n                <div className=\"border-bottom mb-0 pb-3\">\n                  <strong className=\"d-block text-gray-dark\">\n                    <FontAwesomeIcon icon={faBookOpen} className=\"mr-2\" />\n                    Overview\n                  </strong>\n\n                  <Form.Group controlId=\"overview\" className=\"mb-0 mt-2\">\n                    <Editor\n                      apiKey={tinyMceApiKey}\n                      key={\"form-wvgiwys\"}\n                      initialValue={content || \"\"}\n                      init={{\n                        selector: \"textarea\",\n                        images_upload_handler: function (\n                          blobInfo,\n                          success,\n                          failure\n                        ) {\n                          uploadImageFromBlobInfo(blobInfo, success, failure);\n                        },\n                        height: 500,\n                        menubar: false,\n                        plugins: [\n                          \"advlist codesample autolink lists link image imagetools charmap print preview anchor\",\n                          \"searchreplace visualblocks code fullscreen\",\n                          \"insertdatetime media table paste code help wordcount\",\n                        ],\n                        toolbar: `undo redo | formatselect | image | codesample | bold italic backcolor | \n             alignleft aligncenter alignright alignjustify | \n             bullist numlist outdent indent | removeformat | help`,\n                        entity_encoding: \"raw\",\n                      }}\n                      onEditorChange={(overview) =>\n                        handleEditorChange(\"content\", overview)\n                      }\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n              <div className=\"text-muted pt-3\">\n                <div className=\"border-bottom mb-0 pb-3\">\n                  <strong className=\"d-block text-gray-dark\">\n                    <FontAwesomeIcon icon={faSitemap} className=\"mr-2\" />\n                    Slug\n                  </strong>\n                  <Form.Group controlId=\"slug\" className=\"mb-0 mt-2\">\n                    <Form.Control\n                      type=\"text\"\n                      value={slug || \"\"}\n                      placeholder=\"Enter slug\"\n                      onChange={(e) => handleChange(\"slug\", e)}\n                      required\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n\n              <div className=\"text-muted pt-3\">\n                <div className=\"border-bottom mb-0 pb-3\">\n                  <strong className=\"d-block text-gray-dark\">\n                    <FontAwesomeIcon\n                      icon={faChalkboardTeacher}\n                      className=\"mr-2\"\n                    />\n                    Author\n                  </strong>\n                  <Form.Group controlId=\"author\" className=\"mb-0 mt-2\">\n                    <Form.Control\n                      type=\"text\"\n                      value={author || \"\"}\n                      placeholder=\"Enter author's name\"\n                      onChange={(e) => handleChange(\"author\", e)}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n\n              <div className=\"text-muted pt-3\">\n                <div className=\"border-bottom mb-0 pb-3\">\n                  <strong className=\"d-block text-gray-dark\">\n                    <FontAwesomeIcon\n                      icon={faChalkboardTeacher}\n                      className=\"mr-2\"\n                    />\n                    Bits\n                  </strong>\n                  <Form.Group controlId=\"tags\" className=\"mb-0 mt-2\">\n                    <TagsInput\n                      value={tags === \"\" ? [] : tags}\n                      onChange={(tags) => handleTagsChange(\"tags\", tags)}\n                    />\n                  </Form.Group>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </div>\n        <div className=\"course-action-panel\">\n          <div className=\"p-3\">\n            <Button type=\"submit\" variant=\"success\" className=\"ml-2\">\n              <FontAwesomeIcon icon={faSave} className=\"mr-2\" />\n              Save\n            </Button>\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n}\n\nexport default AddCourseComponent;\n","import React, { useState } from \"react\";\nimport AddBitComponent from \"./AddBitComponent\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bitOperations } from \"app/store/state/active-bit\";\n\nfunction AddBit(props) {\n  const dispatch = useDispatch();\n  const tinyMceApiKey = useSelector((state) => state.app.tinyMceApiKey);\n\n  const [bitData, setBitData] = useState({\n    name: \"\",\n    slug: \"\",\n    content: \"\",\n    tags: \"\",\n    author: \"\",\n  });\n\n  const handleChange = (field, e) => {\n    e.stopPropagation();\n    if (field) {\n      const newValue = e.target.value;\n      const oldValue = bitData[field];\n      if (newValue !== oldValue) {\n        setBitData({\n          ...bitData,\n          [field]: newValue,\n        });\n      }\n    }\n  };\n\n  const handleEditorChange = (field, overview) => {\n    setBitData({\n      ...bitData,\n      [field]: overview,\n    });\n  };\n\n  const handleTagsChange = (field, tags) => {\n    setBitData({\n      ...bitData,\n      [field]: tags,\n    });\n  };\n\n  const saveBitDetails = (e) => {\n    e.preventDefault();\n    dispatch(bitOperations.saveNewBitDetails(bitData));\n  };\n\n  return (\n    <AddBitComponent\n      bitData={bitData}\n      tinyMceApiKey={tinyMceApiKey}\n      saveBitDetails={saveBitDetails}\n      handleChange={handleChange}\n      handleEditorChange={handleEditorChange}\n      handleTagsChange={handleTagsChange}\n    />\n  );\n}\n\nexport default AddBit;\n"],"sourceRoot":""}