{"version":3,"sources":["app/views/pages/Lessons/components/LessonForm/index.js","app/views/pages/Lessons/components/LessonDetails/index.js","app/views/pages/Lessons/components/LessonOrderModal/index.js","app/views/pages/Lessons/LessonsComponent.jsx","app/views/pages/Lessons/index.js"],"names":["LessonForm","tinyMceApiKey","mode","lesson","onAdd","onUpdate","modules","useState","title","slug","excerpt","content","sectionId","length","id","isPreviewEnabled","data","setData","handleChange","field","e","stopPropagation","newValue","target","value","handleSubmit","preventDefault","className","Form","onSubmit","Card","Body","icon","faBook","Group","controlId","Control","type","placeholder","onChange","required","faFile","as","custom","map","mod","key","name","faSitemap","faQuoteLeft","faEye","checked","handlePreviewChange","faFileCode","apiKey","init","selector","images_upload_handler","blobInfo","success","failure","uploadImageFromBlobInfo","height","menubar","plugins","toolbar","codesample_languages","EDITOR_LANGUAGE_CONFIG","entity_encoding","onEditorChange","handleEditorChange","Button","variant","faPlus","faSave","renderForm","LessonDetails","deleteLesson","lessonOrder","editMode","setEditMode","deleteMode","setDeleteMode","toggleDeleteMode","moduleData","filter","hasValidModuleData","DeleteConfirmation","visible","onCancel","onOk","message","onClick","faPencilAlt","disabled","faTrash","faListUl","LessonOrderModal","lessons","updatedLessons","setUpdatedLessons","SortableItem","SortableElement","order","SortableList","SortableContainer","list","index","useEffect","Modal","show","centered","size","onHide","onSortEnd","oldIndex","newIndex","arrayMove","LessonsComponent","localCourseLessonsData","localCourseModulesData","addLesson","updateLesson","orderModalOpen","toggleOrderingModal","updateLessonSequence","Tab","Container","defaultActiveKey","Row","Col","xs","Nav","Item","Link","eventKey","md","xl","Content","Pane","Lessons","props","activeCourseLessonsData","useSelector","state","activeCourseLessons","activeCourseModulesData","activeCourseModules","app","dispatch","useDispatch","setLocalCourseLessonsData","setLocalCourseModulesData","setOrderModalOpen","match","params","activeCourseId","setActiveCourseId","isModified","setModifiedFlag","courseId","courseLessonsOperations","loadLessons","courseModulesOperations","loadModules","saveLessonSequenceDetails","addNewLessonDetails","saveLessonDetails","lessonId","deleteLessonDetails"],"mappings":"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","file":"static/js/6.267ff9ed.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport {\n  faBook,\n  faSitemap,\n  faSave,\n  faPlus,\n  faFileCode,\n  faQuoteLeft,\n  faEye,\n  faFile,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { uploadImageFromBlobInfo } from \"app/utils\";\nimport EDITOR_LANGUAGE_CONFIG from \"app/constants/tiny-mce-languages\";\n\nfunction LessonForm({\n  tinyMceApiKey,\n  mode,\n  lesson,\n  onAdd,\n  onUpdate,\n  modules = [],\n}) {\n  const [data, setData] = useState(\n    mode === \"add\"\n      ? {\n          title: \"\",\n          slug: \"\",\n          excerpt: \"\",\n          content: \"\",\n          sectionId: modules.length === 0 ? \"\" : modules[0].id,\n          isPreviewEnabled: false,\n        }\n      : { ...lesson }\n  );\n\n  const handleChange = (field, e) => {\n    e.stopPropagation();\n    if (field) {\n      const newValue = e.target.value;\n      const oldValue = data[field];\n      if (newValue !== oldValue) {\n        setData({\n          ...data,\n          [field]: newValue,\n        });\n      }\n    }\n  };\n\n  const handlePreviewChange = (field, e) => {\n    e.stopPropagation();\n    if (field) {\n      const newValue = e.target.checked;\n      const oldValue = data[field];\n      if (newValue !== oldValue) {\n        setData({\n          ...data,\n          [field]: newValue,\n        });\n      }\n    }\n  };\n  const handleEditorChange = (field, content) => {\n    setData({\n      ...data,\n      [field]: content,\n    });\n  };\n\n  const reset = () => {\n    setData({\n      title: \"\",\n      slug: \"\",\n      excerpt: \"\",\n      content: \"\",\n      sectionId: \"\",\n      isPreviewEnabled: false,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (mode === \"add\") {\n      reset();\n      onAdd(data);\n    }\n    if (mode === \"update\") {\n      onUpdate(data);\n    }\n  };\n\n  const renderForm = () => {\n    const { title, slug, excerpt, content, isPreviewEnabled, sectionId } = data;\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Card className=\"border-0\">\n          <Card.Body>\n            <div className=\"text-muted\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faBook} className=\"mr-2\" />\n                  Title\n                </strong>\n                <Form.Group controlId=\"title\" className=\"mb-0 mt-2\">\n                  <Form.Control\n                    type=\"text\"\n                    value={title || \"\"}\n                    placeholder=\"Enter title\"\n                    onChange={(e) => handleChange(\"title\", e)}\n                    required\n                  />\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faFile} className=\"mr-2\" />\n                  Module\n                </strong>\n\n                <Form.Group controlId=\"sectionId\" className=\"mb-0 mt-2\">\n                  <Form.Control\n                    as=\"select\"\n                    value={sectionId || \"\"}\n                    onChange={(e) => handleChange(\"sectionId\", e)}\n                    required\n                    custom\n                  >\n                    <option value={\"\"}>Select a module</option>\n                    {modules.map((mod) => (\n                      <option key={mod.id} value={mod.id}>\n                        {mod.name}\n                      </option>\n                    ))}\n                  </Form.Control>\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faSitemap} className=\"mr-2\" />\n                  Slug\n                </strong>\n                <Form.Group controlId=\"slug\" className=\"mb-0 mt-2\">\n                  <Form.Control\n                    type=\"text\"\n                    value={slug || \"\"}\n                    placeholder=\"Enter slug\"\n                    onChange={(e) => handleChange(\"slug\", e)}\n                    required\n                  />\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faQuoteLeft} className=\"mr-2\" />\n                  Excerpt\n                </strong>\n                <Form.Group controlId=\"excerpt\" className=\"mb-0 mt-2\">\n                  <Form.Control\n                    type=\"text\"\n                    value={excerpt || \"\"}\n                    placeholder=\"Enter excerpt\"\n                    onChange={(e) => handleChange(\"excerpt\", e)}\n                  />\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faEye} className=\"mr-2\" />\n                  Enable Preview\n                </strong>\n                <Form.Group\n                  controlId=\"isPreviewEnabled\"\n                  className=\"mb-0 mt-2 text-left\"\n                >\n                  <label className=\"switch\">\n                    <input\n                      type=\"checkbox\"\n                      checked={isPreviewEnabled}\n                      onChange={(e) =>\n                        handlePreviewChange(\"isPreviewEnabled\", e)\n                      }\n                    />\n                    <span className=\"slider round\"></span>\n                  </label>\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faFileCode} className=\"mr-2\" />\n                  Content\n                </strong>\n                <Form.Group controlId=\"content\" className=\"mb-0 mt-2\">\n                  <Editor\n                    apiKey={tinyMceApiKey}\n                    key={\"form-wvgiwys\"}\n                    value={content || \"\"}\n                    init={{\n                      selector: \"textarea\",\n                      images_upload_handler: function (\n                        blobInfo,\n                        success,\n                        failure\n                      ) {\n                        uploadImageFromBlobInfo(blobInfo, success, failure);\n                      },\n                      height: 500,\n                      menubar: false,\n                      plugins: [\n                        \"advlist codesample autolink lists link image imagetools charmap print preview anchor\",\n                        \"searchreplace visualblocks code fullscreen\",\n                        \"insertdatetime media table paste code help wordcount\",\n                      ],\n                      toolbar: `undo redo | formatselect | image | codesample | bold italic backcolor | \n             alignleft aligncenter alignright alignjustify | \n             bullist numlist outdent indent | removeformat | help`,\n                      codesample_languages: EDITOR_LANGUAGE_CONFIG,\n                      entity_encoding: \"raw\",\n                    }}\n                    onEditorChange={(content) =>\n                      handleEditorChange(\"content\", content)\n                    }\n                  />\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"pt-3\">\n              {mode === \"add\" && (\n                <Button type=\"submit\" variant=\"success\">\n                  <FontAwesomeIcon icon={faPlus} className=\"mr-2\" />\n                  Add Lesson\n                </Button>\n              )}\n              {mode === \"update\" && (\n                <Button type=\"submit\" variant=\"success\">\n                  <FontAwesomeIcon icon={faSave} className=\"mr-2\" />\n                  Save Lesson\n                </Button>\n              )}\n            </div>\n          </Card.Body>\n        </Card>\n      </Form>\n    );\n  };\n\n  return <div className=\"lesson-form\">{renderForm()}</div>;\n}\n\nLessonForm.propTypes = {\n  mode: PropTypes.string,\n  lesson: PropTypes.object,\n  onAdd: PropTypes.func,\n};\n\nexport default LessonForm;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport DeleteConfirmation from \"app/views/common/components/DeleteConfirmation\";\nimport {\n  faBook,\n  faSitemap,\n  faFileCode,\n  faListUl,\n  faQuoteLeft,\n  faPencilAlt,\n  faTrash,\n  faEye,\n  faFile,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport LessonForm from \"../LessonForm\";\n\nfunction LessonDetails({ lesson, onUpdate, deleteLesson, modules }) {\n  const {\n    title,\n    slug,\n    excerpt,\n    content,\n    lessonOrder,\n    sectionId,\n    isPreviewEnabled,\n    id,\n  } = lesson;\n  const [editMode, setEditMode] = useState(false);\n  const [deleteMode, setDeleteMode] = useState(false);\n\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  };\n  const toggleDeleteMode = () => {\n    setDeleteMode(!deleteMode);\n  };\n  const handleDeleteLesson = () => {\n    deleteLesson(id);\n  };\n\n  const moduleData = modules.filter((mod) => sectionId === mod.id);\n  const hasValidModuleData = moduleData.length > 0;\n\n  return (\n    <div className=\"lesson-details\">\n      <DeleteConfirmation\n        visible={deleteMode}\n        onCancel={toggleDeleteMode}\n        onOk={handleDeleteLesson}\n        message={`Are you sure you want to delete this lesson?`}\n      />\n      <div className=\"text-right p-1\">\n        <Button\n          variant=\"warning\"\n          className=\"text-right\"\n          onClick={toggleEditMode}\n        >\n          <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n          Edit\n        </Button>\n        <Button\n          variant=\"danger\"\n          className=\"text-right ml-2\"\n          onClick={toggleDeleteMode}\n          disabled={deleteMode}\n        >\n          <FontAwesomeIcon icon={faTrash} className=\"mr-2\" />\n          Delete\n        </Button>\n      </div>\n\n      {editMode ? (\n        <LessonForm\n          mode=\"update\"\n          onUpdate={onUpdate}\n          lesson={lesson}\n          modules={modules}\n        />\n      ) : (\n        <Card className=\"border-0\">\n          <Card.Body>\n            <div className=\"text-muted\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faBook} className=\"mr-2\" />\n                  Title\n                </strong>\n                <div>{title || \"Not specified\"}</div>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faFile} className=\"mr-2\" />\n                  Module\n                </strong>\n                <div>\n                  {hasValidModuleData ? moduleData[0].name : \"Not specified\"}\n                </div>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faListUl} className=\"mr-2\" />\n                  Lesson Order\n                </strong>\n                <div>{lessonOrder}</div>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faSitemap} className=\"mr-2\" />\n                  Slug\n                </strong>\n                <div>{slug || \"Not specified\"}</div>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faQuoteLeft} className=\"mr-2\" />\n                  Excerpt\n                </strong>\n                <div>{excerpt || \"Not specified\"}</div>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faEye} className=\"mr-2\" />\n                  Preview Enabled\n                </strong>\n                <div className=\"mt-1\">\n                  <label className=\"switch mb-0\">\n                    <input\n                      type=\"checkbox\"\n                      checked={isPreviewEnabled}\n                      disabled\n                    />\n                    <span className=\"slider round\"></span>\n                  </label>\n                </div>\n              </div>\n            </div>\n            <div className=\"text-muted pt-3\">\n              <div className=\"border-bottom mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faFileCode} className=\"mr-2\" />\n                  Content\n                </strong>\n                <div id=\"editor-disabled\">\n                  {content ? (\n                    <div className=\"bg-dark p-3 mt-3 mb-0 text-white rounded lesson-content\">\n                      {content}\n                    </div>\n                  ) : (\n                    \"Not specified\"\n                  )}\n                </div>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      )}\n    </div>\n  );\n}\n\nLessonDetails.propTypes = {};\n\nexport default LessonDetails;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { SortableContainer, SortableElement } from \"react-sortable-hoc\";\nimport arrayMove from \"array-move\";\nimport \"./lesson-order.scss\";\n\nfunction LessonOrderModal({ visible, onOk, onCancel, lessons = [] }) {\n  const [updatedLessons, setUpdatedLessons] = useState(lessons);\n\n  const SortableItem = SortableElement(({ lesson, order }) => (\n    <div className=\"font-weight-bold d-flex m-2 p-2 draggable-lesson-item align-items-center\">\n      <div className=\"order mr-2\">{order}</div>\n      <div>{lesson.title}</div>\n    </div>\n  ));\n\n  const SortableList = SortableContainer(({ list }) => {\n    return (\n      <div>\n        {list.map((lesson, index) => (\n          <SortableItem\n            key={`item-${lesson.id}`}\n            index={index}\n            lesson={lesson}\n            order={index + 1}\n          />\n        ))}\n      </div>\n    );\n  });\n\n  const onSortEnd = ({ oldIndex, newIndex }) => {\n    if (oldIndex !== newIndex) {\n      setUpdatedLessons(arrayMove(updatedLessons, oldIndex, newIndex));\n    }\n  };\n\n  const saveSequence = (e) => {\n    e.stopPropagation();\n    onOk(updatedLessons);\n  };\n\n  useEffect(() => {\n    setUpdatedLessons(lessons);\n  }, [lessons]);\n\n  return (\n    <Modal\n      show={visible}\n      centered\n      size=\"lg\"\n      onHide={onCancel}\n      id=\"cfg_lesson_order_modal\"\n    >\n      <Modal.Body>\n        <SortableList list={updatedLessons} onSortEnd={onSortEnd} />\n        <div className=\"pt-3 text-right\">\n          <Button variant=\"success\" className=\"ml-2\" onClick={saveSequence}>\n            Save Sequence\n          </Button>\n          <Button variant=\"light\" className=\"ml-2\" onClick={onCancel}>\n            Cancel\n          </Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nLessonOrderModal.propTypes = {\n  visible: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onOk: PropTypes.func,\n  lessons: PropTypes.array,\n};\n\nexport default LessonOrderModal;\n","import React from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport LessonForm from \"./components/LessonForm\";\nimport LessonDetails from \"./components/LessonDetails\";\nimport LessonOrderModal from \"./components/LessonOrderModal\";\n\nfunction LessonsComponent({\n  localCourseLessonsData,\n  localCourseModulesData,\n  tinyMceApiKey,\n  addLesson,\n  updateLesson,\n  deleteLesson,\n  orderModalOpen,\n  toggleOrderingModal,\n  updateLessonSequence,\n}) {\n  return (\n    <div id=\"cfg_lessons\" className=\"page p-0\">\n      <LessonOrderModal\n        visible={orderModalOpen}\n        lessons={localCourseLessonsData}\n        onOk={updateLessonSequence}\n        onCancel={toggleOrderingModal}\n      />\n      <div className=\"p-3 bg-light lessons-header\">\n        <div className=\"lesson-count\">\n          <h6 className=\"m-0\">\n            Lesson Count: <b>{localCourseLessonsData.length}</b>\n          </h6>\n        </div>\n        <div className=\"lessons-action-panel\">\n          <Button\n            type=\"submit\"\n            variant=\"primary\"\n            className=\"ml-2 float-right font-weight-bold\"\n            size=\"sm\"\n            onClick={toggleOrderingModal}\n          >\n            Order Lessons\n          </Button>\n        </div>\n      </div>\n      <div className=\"p-3\">\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"addNewLesson\">\n          <Row>\n            <Col xs={2} className=\"d-md-none\">\n              <Nav className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"addNewLesson\"\n                    className=\"ellipsis clamp-1\"\n                  >\n                    <Button variant=\"secondary\">+</Button>\n                  </Nav.Link>\n                </Nav.Item>\n                {localCourseLessonsData.map((lesson) => (\n                  <Nav.Item key={`lesson-${lesson.id}`}>\n                    <Nav.Link eventKey={lesson.id}>\n                      <Button variant=\"secondary\">{lesson.lessonOrder}</Button>\n                    </Nav.Link>\n                  </Nav.Item>\n                ))}\n              </Nav>\n            </Col>\n            <Col md={3} xl={2} className=\"d-none d-md-block\">\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"addNewLesson\"\n                    className=\"ellipsis clamp-1\"\n                  >\n                    Add new lesson\n                  </Nav.Link>\n                </Nav.Item>\n                {localCourseLessonsData.map((lesson) => (\n                  <Nav.Item key={`lesson-${lesson.id}`}>\n                    <Nav.Link\n                      eventKey={lesson.id}\n                      className=\"ellipsis clamp-2 position-relative\"\n                    >\n                      {`${lesson.lessonOrder}. ${lesson.title}`}\n                    </Nav.Link>\n                  </Nav.Item>\n                ))}\n              </Nav>\n            </Col>\n            <Col xs={9} xl={10}>\n              <Tab.Content>\n                <Tab.Pane eventKey=\"addNewLesson\">\n                  <LessonForm\n                    mode=\"add\"\n                    onAdd={addLesson}\n                    tinyMceApiKey={tinyMceApiKey}\n                    modules={localCourseModulesData}\n                  />\n                </Tab.Pane>\n                {localCourseLessonsData.map((lesson) => (\n                  <Tab.Pane\n                    eventKey={lesson.id}\n                    key={`lesson-pane-${lesson.id}`}\n                  >\n                    <LessonDetails\n                      key={`lesson-${lesson.id}`}\n                      lesson={lesson}\n                      onUpdate={updateLesson}\n                      deleteLesson={deleteLesson}\n                      modules={localCourseModulesData}\n                    />\n                  </Tab.Pane>\n                ))}\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n      </div>\n    </div>\n  );\n}\n\nLessonsComponent.propTypes = {};\n\nexport default LessonsComponent;\n","import React, { useEffect, useState } from \"react\";\nimport LessonsComponent from \"./LessonsComponent\";\nimport { courseLessonsOperations } from \"app/store/state/active-course-lessons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./lessons.scss\";\nimport { courseModulesOperations } from \"app/store/state/active-course-modules\";\n\nfunction Lessons(props) {\n  const activeCourseLessonsData = useSelector(\n    (state) => state.activeCourseLessons.data\n  );\n  const activeCourseModulesData = useSelector(\n    (state) => state.activeCourseModules.data\n  );\n  const tinyMceApiKey = useSelector((state) => state.app.tinyMceApiKey);\n  const dispatch = useDispatch();\n  const [localCourseLessonsData, setLocalCourseLessonsData] = useState([]);\n  const [localCourseModulesData, setLocalCourseModulesData] = useState([]);\n  const [orderModalOpen, setOrderModalOpen] = useState(false);\n  const [activeCourseId, setActiveCourseId] = useState(props.match.params.id);\n  const [isModified, setModifiedFlag] = useState(false);\n\n  useEffect(() => {\n    setModifiedFlag(false);\n    setLocalCourseLessonsData(activeCourseLessonsData);\n  }, [activeCourseLessonsData]);\n\n  useEffect(() => {\n    setLocalCourseModulesData(activeCourseModulesData);\n  }, [activeCourseModulesData]);\n\n  useEffect(() => {\n    const courseId = props.match.params.id;\n    setActiveCourseId(courseId);\n    dispatch(courseLessonsOperations.loadLessons(courseId));\n    dispatch(courseModulesOperations.loadModules(courseId));\n    // eslint-disable-next-line\n  }, [props.match.params.id]);\n\n  const addLesson = (lesson) => {\n    dispatch(\n      courseLessonsOperations.addNewLessonDetails(activeCourseId, lesson)\n    );\n  };\n\n  const updateLesson = (lesson) => {\n    dispatch(courseLessonsOperations.saveLessonDetails(activeCourseId, lesson));\n  };\n\n  const deleteLesson = (lessonId) => {\n    dispatch(\n      courseLessonsOperations.deleteLessonDetails(activeCourseId, lessonId)\n    );\n  };\n\n  const toggleOrderingModal = () => {\n    setOrderModalOpen(!orderModalOpen);\n  };\n\n  const updateLessonSequence = (lessons) => {\n    dispatch(\n      courseLessonsOperations.saveLessonSequenceDetails(activeCourseId, lessons)\n    );\n  };\n\n  return (\n    <LessonsComponent\n      localCourseLessonsData={localCourseLessonsData}\n      localCourseModulesData={localCourseModulesData}\n      isModified={isModified}\n      tinyMceApiKey={tinyMceApiKey}\n      orderModalOpen={orderModalOpen}\n      updateLessonSequence={updateLessonSequence}\n      toggleOrderingModal={toggleOrderingModal}\n      addLesson={addLesson}\n      updateLesson={updateLesson}\n      deleteLesson={deleteLesson}\n    />\n  );\n}\n\nexport default Lessons;\n"],"sourceRoot":""}