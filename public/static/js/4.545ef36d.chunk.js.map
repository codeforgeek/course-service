{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","app/constants/levels.js","app/views/common/components/CourseCard/index.js","app/views/common/components/UploadImageModal/index.js","app/views/pages/CourseDetails/CourseDetailsComponent.jsx","app/views/pages/CourseDetails/index.js"],"names":["DEVICE_SIZES","Row","React","forwardRef","_ref","ref","bsPrefix","className","noGutters","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","createElement","_extends","classNames","apply","concat","displayName","defaultProps","LEVELS_MAP","beginner","advanced","intermediate","CourseCard","id","name","featuredImage","price","freeFlag","overview","isPublished","openCourseDetails","mode","toggleEditMode","toggleDeleteMode","openLessons","openModules","level","type","body","src","alt","icon","faGraduationCap","size","pill","variant","onClick","e","stopPropagation","faAngleRight","faPlus","faPencilAlt","faTrash","UploadImageModal","visible","onImageUpload","onCancel","useState","valid","message","undefined","validation","setValidity","uploading","uploadErr","uploadErrMsg","uploadInfo","setUploadInfo","file","setFile","show","centered","onHide","Header","Body","onSubmit","preventDefault","uploadImageFromFile","imgUrl","File","Input","onChange","fileTarget","target","filePath","value","exec","files","CourseDetailsComponent","deletedSuccess","activeCourse","editModeEnabled","uploadMode","localCourseData","handleChange","isModified","publishCourse","saveCourseDetails","deleteModeEnabled","deleteCourse","prevActiveCourseDeletedSuccessRef","redirectToLessons","redirectToModules","toggleUploadMode","tinyMceApiKey","handleEditorChange","handleSwitchChange","url","useRouteMatch","length","current","to","pathname","slug","author","DeleteConfirmation","onOk","Form","Card","faBook","Group","controlId","Control","placeholder","required","faBookOpen","apiKey","key","initialValue","init","selector","images_upload_handler","blobInfo","success","failure","uploadImageFromBlobInfo","height","menubar","plugins","toolbar","entity_encoding","onEditorChange","faSitemap","faGlobe","faMoneyCheckAlt","Label","Check","label","checked","inline","faChalkboardTeacher","faLayerGroup","custom","Object","keys","map","faLaptopCode","faImage","Col","Button","readOnly","Img","disabled","faSave","faUpload","NoDataFound","CourseDetails","editMode","setEditMode","setUploadMode","deleteMode","setDeleteMode","setRedirectToLessons","setRedirectToModules","setModifiedFlag","setLocalCourseData","useSelector","state","app","dispatch","useDispatch","activeCourseData","data","useRef","useEffect","courseId","match","params","courseOperations","loadCourse","field","newValue","publishCourseDetails","deleteCourseDetails"],"mappings":"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","file":"static/js/4.545ef36d.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","export const LEVELS_MAP = {\n  beginner: \"Beginner\",\n  advanced: \"Advanced\",\n  intermediate: \"Intermediate\",\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Button from \"react-bootstrap/Button\";\nimport { LEVELS_MAP } from \"app/constants/levels\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGraduationCap,\n  faAngleRight,\n  faPencilAlt,\n  faTrash,\n  faPlus,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./course-card.scss\";\n\nfunction CourseCard({\n  id,\n  name,\n  featuredImage,\n  price,\n  freeFlag,\n  overview,\n  isPublished,\n  openCourseDetails,\n  mode = \"list\",\n  toggleEditMode,\n  toggleDeleteMode,\n  openLessons,\n  openModules,\n  level,\n  type,\n}) {\n  const openCourse = (e) => {\n    e.stopPropagation();\n    openCourseDetails(id);\n  };\n  return (\n    <Card body className={`course-card ${mode === \"header\" ? \"bg-light\" : \"\"}`}>\n      <div className=\"course-wrapper p-3\">\n        <div className=\"course-image\">\n          {featuredImage ? (\n            <img src={featuredImage} alt=\"Logo\" />\n          ) : (\n            <FontAwesomeIcon icon={faGraduationCap} size=\"2x\" />\n          )}\n        </div>\n        <div className=\"course-info ml-3\">\n          <div\n            className={`course-title ${\n              mode === \"header\" ? \"h5\" : \"h6\"\n            } clamp-1 ellipsis font-weight-bold mb-0`}\n          >\n            {name}\n          </div>\n          {mode === \"list\" && (\n            <small className=\"course-overview text-muted ellipsis clamp-3\">\n              {overview}\n            </small>\n          )}\n          {mode === \"list\" && (\n            <div className=\"course-tags mt-1\">\n              {freeFlag ? (\n                <Badge pill variant=\"success\" className=\"mr-1\">\n                  Free\n                </Badge>\n              ) : (\n                <Badge pill variant=\"info\" className=\"mr-1\">\n                  Paid\n                </Badge>\n              )}\n              {isPublished ? (\n                <Badge pill variant=\"success\" className=\"mr-1\">\n                  Published\n                </Badge>\n              ) : (\n                <Badge pill variant=\"warning\" className=\"mr-1\">\n                  Not Published\n                </Badge>\n              )}\n              {level && (\n                <Badge pill variant=\"primary\" className=\"mr-1\">\n                  {LEVELS_MAP[level]}\n                </Badge>\n              )}\n              {type && (\n                <Badge pill variant=\"secondary\" className=\"mr-1\">\n                  {type}\n                </Badge>\n              )}\n            </div>\n          )}\n        </div>\n        {!freeFlag && mode === \"list\" && (\n          <h6 className={`text-info fw-bold mr-4 ml-5 mb-0 font-weight-bold`}>\n            <small>INR</small> {price}\n          </h6>\n        )}\n\n        <div className=\"action-panel\">\n          {mode === \"list\" && (\n            <div className=\"action-button pointer\" onClick={openCourse}>\n              <FontAwesomeIcon icon={faAngleRight} />\n            </div>\n          )}\n          {mode === \"header\" && (\n            <>\n              <Button variant=\"primary\" className=\"ml-2\" onClick={openModules}>\n                <FontAwesomeIcon icon={faPlus} className=\"mr-2\" />\n                Add Module\n              </Button>\n              <Button variant=\"success\" className=\"ml-2\" onClick={openLessons}>\n                <FontAwesomeIcon icon={faPlus} className=\"mr-2\" />\n                Add Lesson\n              </Button>\n              <Button\n                variant=\"warning\"\n                className=\"ml-2\"\n                onClick={toggleEditMode}\n              >\n                <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n                Edit\n              </Button>\n              <Button\n                variant=\"danger\"\n                className=\"ml-2\"\n                onClick={toggleDeleteMode}\n              >\n                <FontAwesomeIcon icon={faTrash} className=\"mr-2\" />\n                Delete\n              </Button>\n            </>\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n}\n\nCourseCard.propTypes = {\n  name: PropTypes.string,\n  featuredImage: PropTypes.string,\n  slug: PropTypes.string,\n  price: PropTypes.any,\n  freeFlag: PropTypes.bool,\n  overview: PropTypes.string,\n  isPublished: PropTypes.bool,\n  openCourseDetails: PropTypes.func,\n};\n\nexport default CourseCard;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\nimport { uploadImageFromFile } from \"app/utils\";\n\nfunction UploadImageModal({ visible, onImageUpload, onCancel }) {\n  const [validation, setValidity] = useState({\n    valid: false,\n    message: undefined,\n  });\n\n  const [uploadInfo, setUploadInfo] = useState({\n    uploading: false,\n    uploadErr: false,\n    uploadErrMsg: undefined,\n  });\n\n  const [file, setFile] = useState(undefined);\n\n  const handleFileUpload = (e) => {\n    const fileTarget = e.target;\n    const filePath = fileTarget.value;\n    const allowedExtensions = /(\\.jpg|\\.jpeg|\\.png|\\.gif)$/i;\n    if (!allowedExtensions.exec(filePath)) {\n      setValidity({\n        valid: false,\n        message:\n          \"Please upload file having extensions .jpeg/.jpg/.png/.gif only\",\n      });\n      fileTarget.value = \"\";\n      return false;\n    } else {\n      setFile(fileTarget.files[0]);\n      setValidity({\n        valid: true,\n        message: undefined,\n      });\n      return true;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setUploadInfo({\n      uploading: true,\n      uploadErr: false,\n      uploadErrMsg: undefined,\n    });\n\n    uploadImageFromFile(\n      file,\n      (imgUrl) => {\n        setUploadInfo({\n          uploading: false,\n          uploadErr: false,\n          uploadErrMsg: undefined,\n        });\n        onImageUpload(imgUrl);\n      },\n      (message) => {\n        setUploadInfo({\n          uploading: false,\n          uploadErr: false,\n          uploadErrMsg: message,\n        });\n      }\n    );\n  };\n\n  return (\n    <Modal show={visible} centered size=\"lg\" onHide={onCancel}>\n      <Modal.Header>\n        <b>Upload the featured image for this course</b>\n      </Modal.Header>\n      <Modal.Body>\n        {!validation.valid && validation.message && (\n          <div className=\"pb-2 text-center text-danger\">\n            {validation.message}\n          </div>\n        )}\n        {uploadInfo.uploading ? (\n          <div className=\"pb-2 text-center text-warning\">Uploading</div>\n        ) : uploadInfo.uploadErr ? (\n          <div className=\"pb-2 text-center text-danger\">\n            {uploadInfo.uploadErrMsg}\n          </div>\n        ) : null}\n        <Form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <Form.File id=\"formcheck-api-regular\">\n              <Form.File.Input name=\"featImg\" onChange={handleFileUpload} />\n            </Form.File>\n          </div>\n          <div className=\"pt-3 text-right\">\n            <Button type=\"submit\" variant=\"danger\" className=\"ml-2\">\n              Submit\n            </Button>\n            <Button variant=\"light\" className=\"ml-2\" onClick={onCancel}>\n              Cancel\n            </Button>\n          </div>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nUploadImageModal.propTypes = {\n  visible: PropTypes.bool,\n  onOk: PropTypes.func,\n  onCancel: PropTypes.func,\n};\n\nexport default UploadImageModal;\n","import React from \"react\";\nimport CourseCard from \"app/views/common/components/CourseCard\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBook,\n  faBookOpen,\n  faSitemap,\n  faGlobe,\n  faMoneyCheckAlt,\n  faChalkboardTeacher,\n  faImage,\n  faSave,\n  faUpload,\n  faLayerGroup,\n  faLaptopCode,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport DeleteConfirmation from \"app/views/common/components/DeleteConfirmation\";\nimport { Redirect, useRouteMatch } from \"react-router-dom\";\nimport NoDataFound from \"app/views/common/components/NoDataFound\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport UploadImageModal from \"app/views/common/components/UploadImageModal\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport { uploadImageFromBlobInfo } from \"app/utils\";\n\nimport \"./course-details.scss\";\nimport { LEVELS_MAP } from \"app/constants/levels\";\n\nfunction CourseDetailsComponent(props) {\n  const {\n    activeCourse: { deletedSuccess },\n    editModeEnabled,\n    toggleEditMode,\n    uploadMode,\n    localCourseData,\n    handleChange,\n    isModified,\n    publishCourse,\n    saveCourseDetails,\n    deleteModeEnabled,\n    toggleDeleteMode,\n    deleteCourse,\n    prevActiveCourseDeletedSuccessRef,\n    openLessons,\n    openModules,\n    redirectToLessons,\n    redirectToModules,\n    toggleUploadMode,\n    onImageUpload,\n    tinyMceApiKey,\n    handleEditorChange,\n    handleSwitchChange,\n  } = props;\n  let { url } = useRouteMatch();\n\n  if (!localCourseData || localCourseData.length === 0)\n    return <NoDataFound message=\"This course doesn't exist!\" />;\n  else if (!prevActiveCourseDeletedSuccessRef.current && deletedSuccess)\n    return <Redirect push to={{ pathname: `/courses` }} />;\n  else if (redirectToLessons)\n    return <Redirect push to={{ pathname: `${url}/lessons` }} />;\n  else if (redirectToModules)\n    return <Redirect push to={{ pathname: `${url}/modules` }} />;\n  else {\n    const {\n      id,\n      name,\n      overview,\n      slug,\n      url,\n      price,\n      author,\n      featuredImage,\n      isPublished,\n      level,\n      type,\n      freeFlag,\n    } = localCourseData;\n\n    return (\n      <div id=\"cfg_course_details_page\" className=\"page p-0\">\n        <DeleteConfirmation\n          visible={deleteModeEnabled}\n          onCancel={toggleDeleteMode}\n          onOk={deleteCourse}\n          message={`Are you sure you want to delete this course?`}\n        />\n        <UploadImageModal\n          visible={uploadMode}\n          onCancel={toggleUploadMode}\n          onImageUpload={onImageUpload}\n        />\n        <Form onSubmit={saveCourseDetails}>\n          <div className=\"course-header\">\n            <CourseCard\n              mode=\"header\"\n              {...localCourseData}\n              openLessons={openLessons}\n              openModules={openModules}\n              toggleEditMode={toggleEditMode}\n              toggleDeleteMode={toggleDeleteMode}\n            />\n          </div>\n          <div className=\"course-info p-3\">\n            <Card className=\"border-0\">\n              <Card.Body>\n                <div className=\"text-muted\">\n                  <div className=\"border-bottom mb-0 pb-3\">\n                    <strong className=\"d-block text-gray-dark\">\n                      <FontAwesomeIcon icon={faBook} className=\"mr-2\" />\n                      Title\n                    </strong>\n                    {editModeEnabled ? (\n                      <Form.Group controlId=\"name\" className=\"mb-0 mt-2\">\n                        <Form.Control\n                          type=\"text\"\n                          value={name || \"\"}\n                          placeholder=\"Enter title\"\n                          onChange={(e) => handleChange(\"name\", e)}\n                          required\n                        />\n                      </Form.Group>\n                    ) : (\n                      <>{name || \"Not specified\"}</>\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-muted pt-3\">\n                  <div className=\"border-bottom mb-0 pb-3\">\n                    <strong className=\"d-block text-gray-dark\">\n                      <FontAwesomeIcon icon={faBookOpen} className=\"mr-2\" />\n                      Overview\n                    </strong>\n\n                    {editModeEnabled ? (\n                      <Form.Group controlId=\"overview\" className=\"mb-0 mt-2\">\n                        <Editor\n                          apiKey={tinyMceApiKey}\n                          key={\"form-wvgiwys\"}\n                          initialValue={overview || \"\"}\n                          init={{\n                            selector: \"textarea\",\n                            images_upload_handler: function (\n                              blobInfo,\n                              success,\n                              failure\n                            ) {\n                              uploadImageFromBlobInfo(\n                                blobInfo,\n                                success,\n                                failure\n                              );\n                            },\n                            height: 500,\n                            menubar: false,\n                            plugins: [\n                              \"advlist codesample autolink lists link image imagetools charmap print preview anchor\",\n                              \"searchreplace visualblocks code fullscreen\",\n                              \"insertdatetime media table paste code help wordcount\",\n                            ],\n                            toolbar: `undo redo | formatselect | image | codesample | bold italic backcolor | \n             alignleft aligncenter alignright alignjustify | \n             bullist numlist outdent indent | removeformat | help`,\n                            entity_encoding: \"raw\",\n                          }}\n                          onEditorChange={(overview) =>\n                            handleEditorChange(\"overview\", overview)\n                          }\n                        />\n                      </Form.Group>\n                    ) : (\n                      <>{overview || \"Not specified\"}</>\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-muted pt-3\">\n                  <div className=\"border-bottom mb-0 pb-3\">\n                    <strong className=\"d-block text-gray-dark\">\n                      <FontAwesomeIcon icon={faSitemap} className=\"mr-2\" />\n                      Slug\n                    </strong>\n                    {editModeEnabled ? (\n                      <Form.Group controlId=\"slug\" className=\"mb-0 mt-2\">\n                        <Form.Control\n                          type=\"text\"\n                          value={slug || \"\"}\n                          placeholder=\"Enter slug\"\n                          onChange={(e) => handleChange(\"slug\", e)}\n                          required\n                        />\n                      </Form.Group>\n                    ) : (\n                      <>{slug || \"Not specified\"}</>\n                    )}\n                  </div>\n                </div>\n                {!editModeEnabled ? (\n                  <div className=\"text-muted pt-3\">\n                    <div className=\"border-bottom mb-0 pb-3\">\n                      <strong className=\"d-block text-gray-dark\">\n                        <FontAwesomeIcon icon={faGlobe} className=\"mr-2\" />\n                        URL\n                      </strong>\n                      {url || \"Not specified\"}\n                    </div>\n                  </div>\n                ) : null}\n                <div className=\"text-muted pt-3\">\n                  <div className=\"border-bottom mb-0 pb-3\">\n                    <strong className=\"d-block text-gray-dark\">\n                      <FontAwesomeIcon\n                        icon={faMoneyCheckAlt}\n                        className=\"mr-2\"\n                      />\n                      Pricing\n                    </strong>\n                    {editModeEnabled ? (\n                      <>\n                        <Form.Group controlId=\"price\" className=\"mb-0 mt-2\">\n                          <Form.Label>Free?</Form.Label>\n                          <Form.Check\n                            type=\"switch\"\n                            label={freeFlag ? \"Yes\" : \"No\"}\n                            id=\"custom-switch\"\n                            className=\"align-top ml-2\"\n                            checked={freeFlag}\n                            onChange={(e) => handleSwitchChange(\"freeFlag\", e)}\n                            inline\n                          />\n                        </Form.Group>\n\n                        {!freeFlag && (\n                          <Form.Group controlId=\"price\" className=\"mb-0 mt-2\">\n                            <Form.Control\n                              type=\"number\"\n                              value={price || \"\"}\n                              placeholder=\"Enter price\"\n                              onChange={(e) => handleChange(\"price\", e)}\n                              required\n                            />\n                          </Form.Group>\n                        )}\n                      </>\n                    ) : (\n                      <>\n                        {typeof price === \"number\" || price\n                          ? `INR ${price}`\n                          : \"N.A.\"}\n                      </>\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-muted pt-3\">\n                  <div className=\"border-bottom mb-0 pb-3\">\n                    <strong className=\"d-block text-gray-dark\">\n                      <FontAwesomeIcon\n                        icon={faChalkboardTeacher}\n                        className=\"mr-2\"\n                      />\n                      Author\n                    </strong>\n                    {editModeEnabled ? (\n                      <Form.Group controlId=\"author\" className=\"mb-0 mt-2\">\n                        <Form.Control\n                          type=\"text\"\n                          value={author || \"\"}\n                          placeholder=\"Enter author's name\"\n                          onChange={(e) => handleChange(\"author\", e)}\n                        />\n                      </Form.Group>\n                    ) : (\n                      <>{author || \"Not specified\"}</>\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-muted pt-3\">\n                  <div className=\"border-bottom mb-0 pb-3\">\n                    <strong className=\"d-block text-gray-dark\">\n                      <FontAwesomeIcon icon={faLayerGroup} className=\"mr-2\" />\n                      Level\n                    </strong>\n                    {editModeEnabled ? (\n                      <Form.Group controlId=\"level\" className=\"mb-0 mt-2\">\n                        <Form.Control\n                          as=\"select\"\n                          value={level || \"beginner\"}\n                          onChange={(e) => handleChange(\"level\", e)}\n                          custom\n                        >\n                          {Object.keys(LEVELS_MAP).map((key) => (\n                            <option key={key} value={key}>\n                              {LEVELS_MAP[key]}\n                            </option>\n                          ))}\n                        </Form.Control>\n                      </Form.Group>\n                    ) : (\n                      <>{LEVELS_MAP[level] || \"Not specified\"}</>\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-muted pt-3\">\n                  <div className=\"border-bottom mb-0 pb-3\">\n                    <strong className=\"d-block text-gray-dark\">\n                      <FontAwesomeIcon icon={faLaptopCode} className=\"mr-2\" />\n                      Type\n                    </strong>\n                    {editModeEnabled ? (\n                      <Form.Group controlId=\"type\" className=\"mb-0 mt-2\">\n                        <Form.Control\n                          as=\"select\"\n                          value={type || \"Rich text\"}\n                          onChange={(e) => handleChange(\"type\", e)}\n                          custom\n                          required\n                        >\n                          <option value={\"Rich text\"}>Rich text</option>\n                          <option value={\"Video\"}>Video</option>\n                          <option value={\"Rich text and video\"}>\n                            Rich text and video\n                          </option>\n                        </Form.Control>\n                      </Form.Group>\n                    ) : (\n                      <>{type || \"Not specified\"}</>\n                    )}\n                  </div>\n                </div>\n                <div className=\"text-muted pt-3\">\n                  <div className=\"mb-0 pb-3\">\n                    <strong className=\"d-block text-gray-dark\">\n                      <FontAwesomeIcon icon={faImage} className=\"mr-2\" />\n                      Featured Image\n                    </strong>\n                    {editModeEnabled ? (\n                      <Form.Group\n                        controlId=\"featuredImage\"\n                        className=\"mb-0 mt-2\"\n                      >\n                        <Row>\n                          <Col>\n                            <Button className=\"mb-2\" onClick={toggleUploadMode}>\n                              Upload\n                            </Button>\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Col>\n                            <Form.Control\n                              type=\"text\"\n                              readOnly={true}\n                              value={featuredImage || \"\"}\n                              placeholder=\"Enter image URL\"\n                              onChange={(e) => handleChange(\"featuredImage\", e)}\n                              required\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    ) : (\n                      <div>{featuredImage || \"Not specified\"}</div>\n                    )}\n\n                    {!editModeEnabled && featuredImage && (\n                      <Card.Img\n                        variant=\"top\"\n                        src={featuredImage}\n                        className=\"w-25 pt-2\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </Card.Body>\n            </Card>\n          </div>\n          <div className=\"course-action-panel\">\n            <div className=\"p-3\">\n              <Button\n                type=\"submit\"\n                variant=\"success\"\n                className=\"ml-2\"\n                disabled={!isModified}\n              >\n                <FontAwesomeIcon icon={faSave} className=\"mr-2\" />\n                {isPublished ? \"Update\" : \"Save\"}\n              </Button>\n\n              <Button\n                variant={\"primary\"}\n                className=\"ml-2\"\n                onClick={(e) => publishCourse(e, id, !isPublished)}\n                disabled={isModified}\n              >\n                <FontAwesomeIcon icon={faUpload} className=\"mr-2\" />\n                {isPublished ? \"Un-publish\" : \"Publish\"}\n              </Button>\n            </div>\n          </div>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default CourseDetailsComponent;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport CourseDetailsComponent from \"./CourseDetailsComponent\";\nimport { courseOperations } from \"app/store/state/active-course\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction CourseDetails(props) {\n  const [editMode, setEditMode] = useState(false);\n  const [uploadMode, setUploadMode] = useState(false);\n  const [deleteMode, setDeleteMode] = useState(false);\n  const [redirectToLessons, setRedirectToLessons] = useState(false);\n  const [redirectToModules, setRedirectToModules] = useState(false);\n  const [isModified, setModifiedFlag] = useState(false);\n  const [localCourseData, setLocalCourseData] = useState({});\n  const activeCourse = useSelector((state) => state.activeCourse);\n  const tinyMceApiKey = useSelector((state) => state.app.tinyMceApiKey);\n  const dispatch = useDispatch();\n  const activeCourseData = activeCourse.data;\n  const prevActiveCourseDeletedSuccessRef = useRef();\n\n  useEffect(() => {\n    prevActiveCourseDeletedSuccessRef.current = activeCourse.deletedSuccess;\n  });\n\n  useEffect(() => {\n    if (activeCourseData) {\n      setModifiedFlag(false);\n      setLocalCourseData(activeCourseData);\n    }\n  }, [activeCourseData]);\n\n  useEffect(() => {\n    const courseId = props.match.params.id;\n    dispatch(courseOperations.loadCourse(courseId));\n    // eslint-disable-next-line\n  }, [props.match.params.id]);\n\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  };\n\n  const toggleDeleteMode = () => {\n    setDeleteMode(!deleteMode);\n  };\n\n  const openLessons = () => {\n    setRedirectToLessons(true);\n  };\n\n  const openModules = () => {\n    setRedirectToModules(true);\n  };\n\n  const handleChange = (field, e) => {\n    e.stopPropagation();\n    if (field) {\n      const newValue = e.target.value;\n      const oldValue = localCourseData[field];\n      if (newValue !== oldValue) {\n        setLocalCourseData({\n          ...localCourseData,\n          [field]: newValue,\n        });\n        if (!isModified) setModifiedFlag(true);\n      }\n    }\n  };\n\n  const handleSwitchChange = (field, e) => {\n    e.stopPropagation();\n    if (field) {\n      const newValue = e.target.checked;\n      const oldValue = localCourseData[field];\n      if (newValue !== oldValue) {\n        setLocalCourseData({\n          ...localCourseData,\n          [field]: newValue,\n        });\n        if (!isModified) setModifiedFlag(true);\n      }\n    }\n  };\n\n  const publishCourse = (e, id, isPublished) => {\n    e.stopPropagation();\n    dispatch(courseOperations.publishCourseDetails(id, isPublished));\n  };\n\n  const deleteCourse = (e) => {\n    e.stopPropagation();\n    toggleDeleteMode();\n    dispatch(courseOperations.deleteCourseDetails());\n  };\n\n  const saveCourseDetails = (e) => {\n    e.preventDefault();\n\n    dispatch(courseOperations.saveCourseDetails(localCourseData));\n  };\n\n  const toggleUploadMode = (e) => {\n    e.stopPropagation();\n    setUploadMode(!uploadMode);\n  };\n\n  const onImageUpload = (imgUrl) => {\n    setLocalCourseData({\n      ...localCourseData,\n      featuredImage: imgUrl,\n    });\n    if (!isModified) setModifiedFlag(true);\n    setUploadMode(false);\n  };\n\n  const handleEditorChange = (field, overview) => {\n    setLocalCourseData({\n      ...localCourseData,\n      [field]: overview,\n    });\n    if (!isModified) setModifiedFlag(true);\n  };\n\n  return (\n    <CourseDetailsComponent\n      activeCourse={activeCourse}\n      localCourseData={localCourseData}\n      editModeEnabled={editMode}\n      isModified={isModified}\n      deleteModeEnabled={deleteMode}\n      prevActiveCourseDeletedSuccessRef={prevActiveCourseDeletedSuccessRef}\n      redirectToLessons={redirectToLessons}\n      redirectToModules={redirectToModules}\n      uploadMode={uploadMode}\n      tinyMceApiKey={tinyMceApiKey}\n      handleEditorChange={handleEditorChange}\n      handleChange={handleChange}\n      toggleDeleteMode={toggleDeleteMode}\n      toggleEditMode={toggleEditMode}\n      publishCourse={publishCourse}\n      saveCourseDetails={saveCourseDetails}\n      deleteCourse={deleteCourse}\n      openLessons={openLessons}\n      openModules={openModules}\n      toggleUploadMode={toggleUploadMode}\n      onImageUpload={onImageUpload}\n      handleSwitchChange={handleSwitchChange}\n    />\n  );\n}\n\nexport default CourseDetails;\n"],"sourceRoot":""}