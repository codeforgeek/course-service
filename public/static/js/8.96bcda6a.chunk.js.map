{"version":3,"sources":["app/views/common/components/DeleteConfirmation/index.js","app/views/pages/Modules/components/ModuleForm/index.js","app/views/pages/Modules/components/ModuleDetails/index.js","app/views/pages/Modules/ModulesComponent.jsx","app/views/pages/Modules/index.js"],"names":["DeleteConfirmation","visible","onOk","onCancel","message","show","centered","size","onHide","Body","className","variant","onClick","ModuleForm","mode","sectionModule","module","onAdd","onUpdate","useState","name","data","setData","handleSubmit","e","preventDefault","Form","onSubmit","Card","icon","faBook","Group","controlId","Control","type","value","placeholder","onChange","field","stopPropagation","newValue","target","handleChange","required","Button","faPlus","faSave","renderForm","ModuleDetails","deleteModule","id","editMode","setEditMode","deleteMode","setDeleteMode","toggleDeleteMode","console","log","faPencilAlt","disabled","faTrash","ModulesComponent","localCourseModulesData","addModule","updateModule","length","Tab","Container","defaultActiveKey","Row","Col","xs","Nav","Item","Link","eventKey","map","index","key","md","xl","Content","Pane","Modules","props","activeCourseModulesData","useSelector","state","activeCourseModules","dispatch","useDispatch","setLocalCourseModulesData","match","params","activeCourseId","setActiveCourseId","isModified","setModifiedFlag","useEffect","courseId","courseModulesOperations","loadModules","addNewModuleDetails","saveModuleDetails","moduleId","deleteModuleDetails"],"mappings":"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","file":"static/js/8.96bcda6a.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction DeleteConfirmation({ visible, onOk, onCancel, message }) {\n  return (\n    <Modal show={visible} centered size=\"lg\" onHide={onCancel}>\n      <Modal.Body>\n        <div className=\"pt-1\">{message}</div>\n        <div className=\"pt-3 text-right\">\n          <Button variant=\"danger\" className=\"ml-2\" onClick={onOk}>\n            Yes\n          </Button>\n          <Button variant=\"light\" className=\"ml-2\" onClick={onCancel}>\n            No\n          </Button>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nDeleteConfirmation.propTypes = {\n  visible: PropTypes.bool,\n  onCancel: PropTypes.func,\n  onOk: PropTypes.func,\n};\n\nexport default DeleteConfirmation;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBook, faSave, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction ModuleForm({ mode, module: sectionModule, onAdd, onUpdate }) {\n  const [data, setData] = useState(\n    mode === \"add\"\n      ? {\n          name: \"\",\n        }\n      : { ...sectionModule }\n  );\n\n  const handleChange = (field, e) => {\n    e.stopPropagation();\n    if (field) {\n      const newValue = e.target.value;\n      const oldValue = data[field];\n      if (newValue !== oldValue) {\n        setData({\n          ...data,\n          [field]: newValue,\n        });\n      }\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (mode === \"add\") onAdd(data);\n    if (mode === \"update\") onUpdate(data);\n  };\n\n  const renderForm = () => {\n    const { name } = data;\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Card className=\"border-0\">\n          <Card.Body>\n            <div className=\"text-muted\">\n              <div className=\"mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faBook} className=\"mr-2\" />\n                  Name\n                </strong>\n                <Form.Group controlId=\"name\" className=\"mb-0 mt-2\">\n                  <Form.Control\n                    type=\"text\"\n                    value={name || \"\"}\n                    placeholder=\"Enter name\"\n                    onChange={(e) => handleChange(\"name\", e)}\n                    required\n                  />\n                </Form.Group>\n              </div>\n            </div>\n            <div className=\"pt-3\">\n              {mode === \"add\" && (\n                <Button type=\"submit\" variant=\"success\">\n                  <FontAwesomeIcon icon={faPlus} className=\"mr-2\" />\n                  Add Module\n                </Button>\n              )}\n              {mode === \"update\" && (\n                <Button type=\"submit\" variant=\"success\">\n                  <FontAwesomeIcon icon={faSave} className=\"mr-2\" />\n                  Save Module\n                </Button>\n              )}\n            </div>\n          </Card.Body>\n        </Card>\n      </Form>\n    );\n  };\n\n  return <div className=\"module-form\">{renderForm()}</div>;\n}\n\nModuleForm.propTypes = {\n  mode: PropTypes.string,\n  module: PropTypes.object,\n  onAdd: PropTypes.func,\n};\n\nexport default ModuleForm;\n","import React, { useState } from \"react\";\n// import PropTypes from \"prop-types\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport DeleteConfirmation from \"app/views/common/components/DeleteConfirmation\";\nimport {\n  faBook,\n  faPencilAlt,\n  faTrash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ModuleForm from \"../ModuleForm\";\n\nfunction ModuleDetails({ module: sectionModule, onUpdate, deleteModule }) {\n  const { name, id } = sectionModule;\n  const [editMode, setEditMode] = useState(false);\n  const [deleteMode, setDeleteMode] = useState(false);\n\n  const toggleEditMode = () => {\n    setEditMode(!editMode);\n  };\n  const toggleDeleteMode = () => {\n    setDeleteMode(!deleteMode);\n  };\n  const handleDeleteModule = () => {\n    console.log(deleteModule);\n\n    deleteModule(id);\n  };\n\n  return (\n    <div className=\"module-details\">\n      <DeleteConfirmation\n        visible={deleteMode}\n        onCancel={toggleDeleteMode}\n        onOk={handleDeleteModule}\n        message={`Are you sure you want to delete this module?`}\n      />\n      <div className=\"text-right p-1\">\n        <Button\n          variant=\"warning\"\n          className=\"text-right\"\n          onClick={toggleEditMode}\n        >\n          <FontAwesomeIcon icon={faPencilAlt} className=\"mr-2\" />\n          Edit\n        </Button>\n        <Button\n          variant=\"danger\"\n          className=\"text-right ml-2\"\n          onClick={toggleDeleteMode}\n          disabled={deleteMode}\n        >\n          <FontAwesomeIcon icon={faTrash} className=\"mr-2\" />\n          Delete\n        </Button>\n      </div>\n\n      {editMode ? (\n        <ModuleForm mode=\"update\" onUpdate={onUpdate} module={sectionModule} />\n      ) : (\n        <Card className=\"border-0\">\n          <Card.Body>\n            <div className=\"text-muted\">\n              <div className=\"mt-2 mb-0 pb-3\">\n                <strong className=\"d-block text-gray-dark\">\n                  <FontAwesomeIcon icon={faBook} className=\"mr-2\" />\n                  Name\n                </strong>\n                <div>{name || \"Not specified\"}</div>\n              </div>\n            </div>\n          </Card.Body>\n        </Card>\n      )}\n    </div>\n  );\n}\n\nModuleDetails.propTypes = {};\n\nexport default ModuleDetails;\n","import React from \"react\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\nimport ModuleForm from \"./components/ModuleForm\";\nimport ModuleDetails from \"./components/ModuleDetails\";\n\n// import PropTypes from \"prop-types\";\n\nfunction ModulesComponent({\n  localCourseModulesData,\n  addModule,\n  updateModule,\n  deleteModule,\n}) {\n  return (\n    <div id=\"cfg_modules\" className=\"page p-0\">\n      <div className=\"p-3 bg-light\">\n        <h6 className=\"m-0\">\n          Module Count: <b>{localCourseModulesData.length}</b>\n        </h6>\n      </div>\n      <div className=\"p-3\">\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"addNewModule\">\n          <Row>\n            <Col xs={2} className=\"d-md-none\">\n              <Nav className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"addNewModule\"\n                    className=\"ellipsis clamp-1\"\n                  >\n                    <Button variant=\"secondary\">+</Button>\n                  </Nav.Link>\n                </Nav.Item>\n                {localCourseModulesData.map((sectionModule, index) => (\n                  <Nav.Item key={`module-${sectionModule.id}`}>\n                    <Nav.Link eventKey={sectionModule.id}>\n                      <Button variant=\"secondary\">{index + 1}</Button>\n                    </Nav.Link>\n                  </Nav.Item>\n                ))}\n              </Nav>\n            </Col>\n            <Col md={3} xl={2} className=\"d-none d-md-block\">\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link\n                    eventKey=\"addNewModule\"\n                    className=\"ellipsis clamp-1\"\n                  >\n                    Add new module\n                  </Nav.Link>\n                </Nav.Item>\n                {localCourseModulesData.map((sectionModule, index) => (\n                  <Nav.Item key={`module-${sectionModule.id}`}>\n                    <Nav.Link\n                      eventKey={sectionModule.id}\n                      className=\"ellipsis clamp-2 position-relative\"\n                    >\n                      {`${index + 1}. ${sectionModule.name}`}\n                    </Nav.Link>\n                  </Nav.Item>\n                ))}\n              </Nav>\n            </Col>\n            <Col xs={9} xl={10}>\n              <Tab.Content>\n                <Tab.Pane eventKey=\"addNewModule\">\n                  <ModuleForm mode=\"add\" onAdd={addModule} />\n                </Tab.Pane>\n                {localCourseModulesData.map((sectionModule) => (\n                  <Tab.Pane\n                    eventKey={sectionModule.id}\n                    key={`module-pane-${sectionModule.id}`}\n                  >\n                    <ModuleDetails\n                      key={`module-${sectionModule.id}`}\n                      module={sectionModule}\n                      onUpdate={updateModule}\n                      deleteModule={deleteModule}\n                    />\n                  </Tab.Pane>\n                ))}\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n      </div>\n    </div>\n  );\n}\n\nModulesComponent.propTypes = {};\n\nexport default ModulesComponent;\n","import React, { useEffect, useState } from \"react\";\nimport ModulesComponent from \"./ModulesComponent\";\nimport { courseModulesOperations } from \"app/store/state/active-course-modules\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"./modules.scss\";\n\nfunction Modules(props) {\n  const activeCourseModulesData = useSelector(\n    (state) => state.activeCourseModules.data\n  );\n  const dispatch = useDispatch();\n  const [localCourseModulesData, setLocalCourseModulesData] = useState([]);\n  const [activeCourseId, setActiveCourseId] = useState(props.match.params.id);\n  const [isModified, setModifiedFlag] = useState(false);\n\n  useEffect(() => {\n    setModifiedFlag(false);\n    setLocalCourseModulesData(activeCourseModulesData);\n  }, [activeCourseModulesData]);\n\n  useEffect(() => {\n    const courseId = props.match.params.id;\n    setActiveCourseId(courseId);\n    dispatch(courseModulesOperations.loadModules(courseId));\n    // eslint-disable-next-line\n  }, [props.match.params.id]);\n\n  const addModule = (module) => {\n    dispatch(\n      courseModulesOperations.addNewModuleDetails(activeCourseId, module)\n    );\n  };\n\n  const updateModule = (module) => {\n    dispatch(courseModulesOperations.saveModuleDetails(activeCourseId, module));\n  };\n\n  const deleteModule = (moduleId) => {\n    dispatch(\n      courseModulesOperations.deleteModuleDetails(activeCourseId, moduleId)\n    );\n  };\n\n  return (\n    <ModulesComponent\n      localCourseModulesData={localCourseModulesData}\n      isModified={isModified}\n      addModule={addModule}\n      updateModule={updateModule}\n      deleteModule={deleteModule}\n    />\n  );\n}\n\nexport default Modules;\n"],"sourceRoot":""}